name: Continuous Integration

# Run this workflow every time a new commit pushed to your repository
on: [push, pull_request]

jobs:
  windows-debug:
    # Name the Job
    name: Windows Debug x64
    # Set the type of machine to run on
    runs-on: windows-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Restore cache:
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: C:\.hunter
          key:  ${{ runner.os }}-hunter-debug-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-hunter-debug-
            ${{ runner.os }}-hunter-
      
      # Note that windows has a recent version of cmake installed -> we don't need to install it here.
      
      # we set CMAKE_CXX_FLAGS_DEBUG explictly to avoid the creation of pdb files (which fill up disk space)
      - name: Hunter dependencies
        run: |
          mkdir build > $null
          cd build
          cmake -A x64 -D HUNTER_CONFIGURATION_TYPES=Debug -D CMAKE_CXX_FLAGS_DEBUG="/MDd /Ob0 /Od /RTC1" ..
          
      - name: compile
        run: |
          cmake --build ./build --config Debug --target ALL_BUILD
          
      - name: test
        run: |
          cd build
          ctest -j 2 -c Debug --output-on-failure
          
    
  windows-release:
    # Name the Job
    name: Windows Release x64
    # Set the type of machine to run on
    runs-on: windows-latest
 
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Restore cache:
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: C:\.hunter
          key:  ${{ runner.os }}-hunter-release-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-hunter-release-
            ${{ runner.os }}-hunter-
      
      # Note that windows has a recent version of cmake installed -> we don't need to install it here.
      
      - name: Hunter dependencies
        run: |
          mkdir build > $null
          cd build
          cmake -A x64 -D HUNTER_CONFIGURATION_TYPES=Release ..
          
      - name: compile
        run: cmake --build ./build --config Release --target ALL_BUILD
          
      - name: test
        run: |
          cd build
          ctest -j 2 -c Release --output-on-failure
